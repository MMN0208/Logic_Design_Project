// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.1 Build 850 06/23/2022 SJ Lite Edition"

// DATE "10/27/2022 20:47:51"

// 
// Device: Altera EP4CGX150DF31C7 Package FBGA896
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Lab3 (
	LEDR,
	SW);
output 	[1:0] LEDR;
input 	[1:0] SW;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \LEDR[1]~output_o ;
wire \LEDR[0]~output_o ;
wire \SW[1]~input_o ;
wire \SW[0]~input_o ;
wire \inst|D0|master|R_g~combout ;
wire \inst|D0|master|S_g~combout ;
wire \inst|D0|master|Qb~combout ;
wire \inst|D0|master|Qa~combout ;
wire \inst|D0|slave|R_g~combout ;
wire \inst|D0|slave|S_g~combout ;
wire \inst|D0|slave|Qb~combout ;
wire \inst|D0|slave|Qa~combout ;


cycloneiv_io_obuf \LEDR[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \LEDR[0]~output (
	.i(\inst|D0|slave|Qa~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|master|R_g (
// Equation(s):
// \inst|D0|master|R_g~combout  = LCELL((\SW[1]~input_o ) # (\SW[0]~input_o ))

	.dataa(\SW[1]~input_o ),
	.datab(\SW[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|master|R_g~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|master|R_g .lut_mask = 16'hEEEE;
defparam \inst|D0|master|R_g .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|master|S_g (
// Equation(s):
// \inst|D0|master|S_g~combout  = LCELL((\SW[1]~input_o ) # (!\SW[0]~input_o ))

	.dataa(\SW[0]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\SW[1]~input_o ),
	.cin(gnd),
	.combout(\inst|D0|master|S_g~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|master|S_g .lut_mask = 16'hFF55;
defparam \inst|D0|master|S_g .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|master|Qb (
// Equation(s):
// \inst|D0|master|Qb~combout  = LCELL((!\inst|D0|master|S_g~combout ) # (!\inst|D0|master|Qa~combout ))

	.dataa(\inst|D0|master|Qa~combout ),
	.datab(\inst|D0|master|S_g~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|master|Qb~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|master|Qb .lut_mask = 16'h7777;
defparam \inst|D0|master|Qb .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|master|Qa (
// Equation(s):
// \inst|D0|master|Qa~combout  = LCELL((!\inst|D0|master|Qb~combout ) # (!\inst|D0|master|R_g~combout ))

	.dataa(\inst|D0|master|R_g~combout ),
	.datab(\inst|D0|master|Qb~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|master|Qa~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|master|Qa .lut_mask = 16'h7777;
defparam \inst|D0|master|Qa .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|slave|R_g (
// Equation(s):
// \inst|D0|slave|R_g~combout  = LCELL((\inst|D0|master|Qa~combout ) # (!\SW[1]~input_o ))

	.dataa(\SW[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\inst|D0|master|Qa~combout ),
	.cin(gnd),
	.combout(\inst|D0|slave|R_g~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|slave|R_g .lut_mask = 16'hFF55;
defparam \inst|D0|slave|R_g .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|slave|S_g (
// Equation(s):
// \inst|D0|slave|S_g~combout  = LCELL((!\inst|D0|master|Qa~combout ) # (!\SW[1]~input_o ))

	.dataa(\SW[1]~input_o ),
	.datab(\inst|D0|master|Qa~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|slave|S_g~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|slave|S_g .lut_mask = 16'h7777;
defparam \inst|D0|slave|S_g .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|slave|Qb (
// Equation(s):
// \inst|D0|slave|Qb~combout  = LCELL((!\inst|D0|slave|S_g~combout ) # (!\inst|D0|slave|Qa~combout ))

	.dataa(\inst|D0|slave|Qa~combout ),
	.datab(\inst|D0|slave|S_g~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|slave|Qb~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|slave|Qb .lut_mask = 16'h7777;
defparam \inst|D0|slave|Qb .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|D0|slave|Qa (
// Equation(s):
// \inst|D0|slave|Qa~combout  = LCELL((!\inst|D0|slave|Qb~combout ) # (!\inst|D0|slave|R_g~combout ))

	.dataa(\inst|D0|slave|R_g~combout ),
	.datab(\inst|D0|slave|Qb~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|D0|slave|Qa~combout ),
	.cout());
// synopsys translate_off
defparam \inst|D0|slave|Qa .lut_mask = 16'h7777;
defparam \inst|D0|slave|Qa .sum_lutc_input = "datac";
// synopsys translate_on

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[0] = \LEDR[0]~output_o ;

endmodule
